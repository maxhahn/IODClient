% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/IOD.R
\name{IOD}
\alias{IOD}
\title{Learning PAGs from multiple datasets with overlapping variables by using the IOD}
\usage{
IOD(
  labelList,
  suffStat,
  alpha = 0.05,
  method = "standard",
  procedure = "original",
  verbose = FALSE
)
}
\arguments{
\item{suffStat}{list of lists each including the nth CI-test results and the labels of the dataset}

\item{alpha}{significance level on which the combined statistics in the IOD reject H0 (independence of variables). The default value is 0.05.}

\item{method}{the default value is "standard". If "standard" is chosen, it won't have an additional check. If "consistence" is chosen,
an additional validation check is done, which will exclude any PAGs from the list, if they violate marginal consistency. This could be helpful, when dealing with unfaithfulness.}

\item{procedure}{there are 3 procedures you can choose from: "original", "orderedcolls" and "orderedtriplets".
"original" performs the regular IOD. "orderedcolls" includes colliders of any order, while "orderedtriplets" considers triplets of any order.
"orderedcolls" or "orderedtriplets" can have an output in unfaithful cases where the  "original" version could not find any, because in cases where
datasets have conflicting orientations we consider both.}

\item{verbose}{the default value is FALSE. If it is set to TRUE, there is additional output in the console about the steps and calculations that are done.}
}
\value{
Returns a list with the following elements:
\describe{
\item{G_PAG_List}{The output list of PAGs given by adjacency matrices which reflect the given statistics (\code{G_PAG_List}).}
\item{Gi_PAG_list}{A list of the fully oriented input-datasets (\code{Gi_PAG_list}), which were used to train the PAGs.}
\item{len_before}{The length of the output list of PAGs before these were validated (\code{len_before}).}
\item{nCK1}{The number of colliders of an order higher than 1 (\code{nCK1}) taken into account.}
\item{nNCK1}{The number of non-colliders of any order (\code{nNCK1})taken into account.}
}

#'
}
\description{
This package implements the Integration of overlapping datasets algorithm by Tillman et. al. (2011) and
also offers 2 additional procedures which both improve the performance.

The Algorithm can be used to obtain a list of PAGs from datasets with overlapping variables.
The PAGs in the list all reflect the observed data.
The IOD assumes faithfulness, so if this assumption does not hold, the results can be bad containing PAGs with wrong (in)dependencies or an empty list.
}
\examples{
# I generate fake data from the true PAG below
adag_out <- FCI.Utils::getDAG("pdsep_g")
truePAG <- FCI.Utils::getTruePAG(adag_out$dagg)
trueAdjM <- truePAG@amat

# create datasets or organize yours like this:
data <- list()
for (i in 1:3) {
  adat_out <- FCI.Utils::generateDataset(adag = adag_out$dagg,
                                         N=100000, type = "continuous")
  cur_full_dat <- adat_out$dat
  data[[i]] <-  cur_full_dat[,
      sample(1:ncol(cur_full_dat), size = 3), drop=FALSE] #generated datasets
}
# run the citests separately
citestResultsList <- list()
labelList <- list()
index <- 1
for (cur_dat in data) {
 #this is how to run CI Tests for a dataset cur_dat
 cur_labels <- colnames(cur_dat)
 indepTest <- FCI.Utils::mixedCITest
 suffStat <- FCI.Utils::getMixedCISuffStat(dat = cur_dat,
                                vars_names = cur_labels,
                                 covs_names = c())

  citestResults <- FCI.Utils::getAllCITestResults(
                                       cur_dat, indepTest, suffStat,
                                       m.max=2, saveFiles = TRUE,
                                       fileid = sprintf("\%04d", index),
                                       citestResults_folder="./citests/")
  citestResulstList[[index]] <- citestResults
  labelList[[index]] <- cur_labels

  index <- index + 1
}

# create the suffstat for the meta-analysis approach
suffStat <- list()
suffStat$citestResultsList <- citestResultsList
suffStat$labelList <- labelList

# call IOD.
alpha <- 0.05
iod_out <- IOD(labelList, suffStat, alpha)

# show the output.
iod_out$Gi_PAG_list # list of PAGs generated from each dataset
lapply(iod_out$Gi_PAG_list, FCI.Utils::renderAG)

iod_out$G_PAG_List # list of possible merged PAGs

# This is going to render the graphs in the viewer tab
lapply(iod_out$G_PAG_List, FCI.Utils::renderAG)

}
